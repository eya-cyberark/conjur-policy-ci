name: Test GitHub OIDC Token and Authenticate

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  authenticate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install tools
        run: |
          sudo apt-get update && sudo apt-get install -y jq curl yamllint

      - name: Request GitHub OIDC Token
        id: jwt
        run: |
          echo "üîê Requesting GitHub OIDC token..."

          resp=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "${ACTIONS_ID_TOKEN_REQUEST_URL}?audience=conjur")

          jwt=$(echo "$resp" | jq -r '.value')
          if [ "$jwt" = "null" ] || [ -z "$jwt" ]; then
            echo "‚ùå Failed to get JWT"
            exit 1
          fi

          echo "‚úÖ Got JWT"
          echo "jwt_token=$jwt" >> $GITHUB_ENV

      - name: Authenticate to Conjur Cloud with JWT
        run: |
          response=$(curl -s -w "%{http_code}" -o conjur_token.txt \
            -X POST "https://sme-andrew.secretsmgr.cyberark.cloud/api/authn-jwt/EyaGithub/conjur/authenticate" \
            -H "Accept-Encoding: base64" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            --data-urlencode "jwt=${{ env.jwt_token }}")

          status=$(tail -n1 <<< "$response")

          if [ "$status" != "200" ]; then
            echo "‚ùå Auth failed with status $status"
            cat conjur_token.txt
            exit 1
          fi

          token=$(cat conjur_token.txt)
          echo "conjur_token=$token" >> $GITHUB_ENV

      - name: Validate policy YAML syntax
        run: |
          echo "üîé Validating changed policy files with yamllint..."

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            base_sha="${{ github.event.pull_request.base.sha }}"
            head_sha="${{ github.event.pull_request.head.sha }}"
          else
            base_sha="${{ github.event.before }}"
            head_sha="${{ github.sha }}"
          fi

          files=$(git diff --name-only $base_sha $head_sha -- policy/ || echo "")
          
          has_errors=0
          for file in $files; do
            if [[ "$file" == *.yml || "$file" == *.yaml ]]; then
              echo "üîç Linting $file"
              yamllint -c .yamllint "$file" || has_errors=1
            fi
          done

          if [[ $has_errors -ne 0 ]]; then
            echo "‚ùå One or more policy files failed YAML linting."
            exit 1
          else
            echo "‚úÖ All policy files passed YAML linting."
          fi

      - name: Find changed policy files and upload
        if: github.event_name == 'push' && github.actor == 'eya-cyberark'
        run: |
          echo "üìÇ Finding changed policy files..."

          base_sha="${{ github.event.before }}"
          head_sha="${{ github.sha }}"

          echo "Comparing $base_sha to $head_sha"

          files=$(git diff --name-only $base_sha $head_sha -- policy/ || echo "")

          echo "Changed policy files:"
          echo "$files"

          found_01=false
          found_02=false

          for file in $files; do
            if [[ -f "$file" ]]; then
              if [[ "$file" == *policy/01_*.yml ]]; then
                found_01=true
              fi
              if [[ "$file" == *policy/02_*.yml ]]; then
                found_02=true
              fi

              if [[ "$file" == *policy/01_*.yml || "$file" == *policy/02_*.yml ]]; then
                echo "üì§ Uploading changed policy file: $file"

                curl -s --request POST \
                  --url https://sme-andrew.secretsmgr.cyberark.cloud/api/policies/conjur/policy/data/githubTest \
                  --header "Authorization: Token token=\"${{ env.conjur_token }}\"" \
                  --header "Content-Type: text/plain" \
                  --data-binary @"$file"
              fi
            fi
          done

          if [[ "$found_01" == true && "$found_02" == true ]]; then
            echo "‚úÖ Both 01 and 02 policy files were changed!"
          else
            echo "‚ÑπÔ∏è One or both policy files were not changed."
          fi
